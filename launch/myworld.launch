<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="empty"/>
  <arg name="model" default="lip"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="world_frame" default="world"/>
  <arg name="map_frame"   default="map"/>


  <!--node pkg="gazebo_ros" type="gzserver" ns="/" args="" respawn="False" respawn_delay="0.0" name="gzserver" required="False" />

  <node pkg="gazebo_ros" type="gzclient" ns="/" args="verbose" respawn="True" respawn_delay="0.0" name="gzclient" required="False" / -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find inverted_pendulum_control)/worlds/mybot.world"/>
    <!--arg name="world_name" value="$(find mybot_gazebo)/worlds/turtlebot_playground.world"/-->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="true" />
  </include>


  <!-- send the lip robot XML to param server -->
  <group ns="lip">
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find inverted_pendulum_control)/model/$(arg model).urdf'" />

    <rosparam file="$(find inverted_pendulum_control)/config/lip.yaml" command="load"/>

    <node pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg model) -x 10 -y 0 -z 0" output="screen" respawn="False" respawn_delay="0.0" name="spawn_urdf" required="False" />

    <node name="joint_state_publisher"
      pkg ="joint_state_publisher"
      type="joint_state_publisher">
      <param name="use_gui" value="true"/>
      <remap from="/joint_states" 
          to="/$(arg model)/joint_states" />
    </node>
  
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="tf_broadcaster_$(arg model)">
      <param name="publish_frequency" type="double" value="1000.0"/>
      <remap from="/joint_states" to="/$(arg model)/joint_states" />
    </node>

    <node pkg="controller_manager" type="spawner" ns="/$(arg model)" args="joint_state_controller joint_effort_controller_j_0" output="screen" respawn="False" respawn_delay="0.0" name="controller_spawner" required="False" />
  </group>


  <group ns="mybot">
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find inverted_pendulum_control)/model/mybot.xacro'"/>

    <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
     args="-urdf -param robot_description -model mybot" />
  </group>

</launch>
